name: Deploy SAM Application

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Setup AWS SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::571705099822:role/GitHubActionsSAMDeployRole
          aws-region: ap-northeast-1

      - name: SAM Build
        run: sam build

      - name: SAM Deploy
        run: |
          sam deploy --stack-name lambda-cicd-stack \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset

      - name: Publish Lambda Version and Update Test Alias
        run: |
          # Lambdaの関数名を取得（SAMのスタック出力から取得する場合）
          FUNCTION_NAME=$(aws cloudformation describe-stacks --stack-name lambda-cicd-stack --query "Stacks[0].Outputs[?OutputKey=='HelloWorldFunction'].OutputValue" --output text)

          # 関数名が取得できたか確認
          if [ -z "$FUNCTION_NAME" ] || [ "$FUNCTION_NAME" = "None" ]; then
            echo "Lambda関数名が取得できませんでした。SAMテンプレートでOutputsセクションにHelloWorldFunctionという名前で関数ARNを出力しています。"
            
            # 代替手段：SAMテンプレートから直接関数名を特定
            FUNCTION_NAME="lambda-cicd-stack-HelloWorldFunction"
            echo "代替手段として関数名を使用します: $FUNCTION_NAME"
          fi

          # 関数ARNから関数名を抽出（ARNが返された場合）
          if [[ "$FUNCTION_NAME" == arn:aws:lambda:* ]]; then
            FUNCTION_NAME=$(echo "$FUNCTION_NAME" | awk -F: '{print $7}')
            echo "ARNから関数名を抽出しました: $FUNCTION_NAME"
          fi

          echo "Lambda関数名: $FUNCTION_NAME"

          # 新しいバージョンを発行
          VERSION=$(aws lambda publish-version --function-name $FUNCTION_NAME --description "Automated version created by GitHub Actions" --query "Version" --output text)

          echo "Published Lambda version: $VERSION"

          # Testエイリアスが既に存在するか確認
          if aws lambda get-alias --function-name $FUNCTION_NAME --name Test &> /dev/null; then
            # エイリアスが存在する場合は更新
            aws lambda update-alias --function-name $FUNCTION_NAME --name Test --function-version $VERSION
            echo "Updated Test alias to version $VERSION"
          else
            # エイリアスが存在しない場合は作成
            aws lambda create-alias --function-name $FUNCTION_NAME --name Test --function-version $VERSION
            echo "Created Test alias pointing to version $VERSION"
          fi
